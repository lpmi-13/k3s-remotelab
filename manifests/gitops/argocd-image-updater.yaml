apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-image-updater
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-image-updater
    spec:
      serviceAccountName: argocd-image-updater
      containers:
      - name: argocd-image-updater
        image: quay.io/argoprojlabs/argocd-image-updater:v0.12.2
        command:
        - /usr/local/bin/argocd-image-updater
        - run
        env:
        - name: ARGOCD_TOKEN
          valueFrom:
            secretKeyRef:
              name: argocd-image-updater-secret
              key: argocd.token
              optional: true
        - name: ARGOCD_SERVER
          value: "argocd-server.argocd.svc.cluster.local:443"
        - name: ARGOCD_INSECURE
          value: "true"
        - name: ARGOCD_GRPC_WEB
          value: "false"
        volumeMounts:
        - name: ssh-known-hosts
          mountPath: /app/config/ssh
        - name: ssh-config
          mountPath: /app/.ssh
        - name: tmp
          mountPath: /tmp
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 30
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      volumes:
      - name: ssh-known-hosts
        configMap:
          name: argocd-ssh-known-hosts-cm
          optional: true
      - name: ssh-config
        secret:
          secretName: argocd-image-updater-ssh-config
          optional: true
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-image-updater
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: argocd-image-updater
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: argocd-image-updater
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argocd-image-updater
subjects:
- kind: ServiceAccount
  name: argocd-image-updater
  namespace: argocd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-image-updater-config
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd
data:
  registries.conf: |
    registries:
    - name: Gitea Registry
      prefix: gitea.homelab.local
      api_url: https://gitea.homelab.local/api/v1
      ping: yes
      insecure: yes
      credentials: secret:argocd/gitea-registry-creds#username#password
  git.config: |
    [user]
    name = ArgoCD Image Updater
    email = argocd-image-updater@homelab.local
  log.level: info
  argocd.server_addr: argocd-server.argocd.svc.cluster.local:443
  argocd.insecure: "true"
  argocd.grpc_web: "false"
---
apiVersion: v1
kind: Secret
metadata:
  name: gitea-registry-creds
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-image-updater
    app.kubernetes.io/part-of: argocd
type: Opaque
stringData:
  username: "homelab"  # Replace with actual Gitea username
  password: "changeme"  # Replace with actual Gitea password or token